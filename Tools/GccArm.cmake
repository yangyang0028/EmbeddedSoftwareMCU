cmake_minimum_required(VERSION 3.5)

function(download_file_with_hash url filename hash_type hash)
  message(STATUS "Download to ${filename} ...")
  file(DOWNLOAD ${url} ${filename} EXPECTED_HASH ${hash_type}=${hash})
endfunction()

function(extract_file filename extract_dir)
  message(STATUS "Extract to ${extract_dir} ...")
  set(temp_dir ${CMAKE_BINARY_DIR}/tmp_for_extract.dir)
  if(EXISTS ${temp_dir})
    file(REMOVE_RECURSE ${temp_dir})
  endif()
  file(MAKE_DIRECTORY ${temp_dir})
  execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xjf ${filename}
                  WORKING_DIRECTORY ${temp_dir})

  file(GLOB contents "${temp_dir}/*")
  list(LENGTH contents n)
  if(NOT n EQUAL 1 OR NOT IS_DIRECTORY "${contents}")
    set(contents "${temp_dir}")
  endif()

  get_filename_component(contents ${contents} ABSOLUTE)

  file(INSTALL "${contents}/" DESTINATION ${extract_dir})
  file(REMOVE_RECURSE ${temp_dir})
  file(CHMOD_RECURSE ${extract_dir} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
endfunction()

function(download_and_extract url filename hash_type hash extract_dir)
    if(EXISTS ${filename})
        file(${hash_type} ${filename} _ACTUAL_CHKSUM)
        if(NOT (${hash} STREQUAL ${_ACTUAL_CHKSUM}))
            message("HASH error: expected is ${hash}, actual is ${hash}")
            message("Start download!!!")
            download_file_with_hash(${url} ${filename} ${hash_type} ${hash})
            message("Start extract!!!")
            extract_file(${filename} ${extract_dir})
        else()
            if(NOT EXISTS ${extract_dir})
                message("Can't found ${extract_dir}")
                message("Start extract!!!")
                extract_file(${filename} ${extract_dir})
            else()
                message("${DAE_EXTRACT_DIR} already exists, skip download & extract")
            endif()
        endif()
    else()
        message("Can't found ${filename}")
        message("Start download!!!")
        download_file_with_hash(${url} ${filename} ${hash_type} ${hash})
        message("Start extract!!!")
        extract_file(${filename} ${extract_dir})
    endif()
endfunction()
